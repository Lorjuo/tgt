<% content_for :title do %>
  <%= t ".title", :name => @location.name, :season => t("general.#{@season}") %>
<% end %>

<% content_for :buttons do %>
  <%= link_to locations_path, :class => 'btn btn-default' do %>
    <span class="glyphicon glyphicon-list-alt"></span>
    <%= t "general.list" %>
  <% end %>
  <%= link_to location_path(@location), :class => 'btn btn-primary' do %>
  <span class="glyphicon glyphicon-pencil"></span>
    <%= t "general.show" %>
  <% end %>
<% end %>

<div class="window box">
  <%#= p @data %>
  <div class="col-md-12" style="overflow: auto">
  <table class="table table-bordered table-striped schedule" style="table-layout: fixed">
    <thead>
      <tr>
        <th><%= t "general.time" %></th>
        <% @data.each do |day, columns| %>
          <%= content_tag :th, :colspan => columns.length, :class => "first_column", :style => "overflow: hidden" do %>
            <%= link_to schedule_location_path(@location, :season => @season, :week_day => day), :class => "no-wrap" do %>
              <span class="glyphicon glyphicon-calendar"></span>
              <%= I18n.t(:"date.day_names").at(day) %>
            <% end %>
          <% end %>
          <% columns.each {|column| column.reset_occupancy} %>
        <% end %>
      </tr>
    </thead>
    <tbody>

      <% time = Time.zone.local(2000,1,1,APP_CONFIG['schedule']['start'],0) %>
      <% begin %>
        <% even = false %>
        <tr>
          <th><%= time.min == 0 ? "#{time.hour} Uhr" : "" %></th>

          <% @data.each do |day, columns| %>
            <% first_column = true %>
            <% columns.each do |column| %>
              <% unless column.is_occupied?(time) %>

                <% occupancy = column.next_occupancy(time, APP_CONFIG['schedule']['step_size'].minutes) %>
                <% if occupancy.nil? %>
                  <%= tag :td, :class => (even ? "even" : "odd")+" "+(first_column ? "first_column" : "") %>
                <% else %>
                  <%= render :partial => "training_units/schedule", :locals => {:training_unit => occupancy[:training_unit], :steps => occupancy[:steps]} %>
                <% end %>
              <% end %>
              <% first_column = false %>
            <% end %>
            <% even = !even %>
          <% end %>
          <% time += APP_CONFIG['schedule']['step_size'].minutes %>
        </tr>
      <% end while time < Time.zone.local(2000,1,1,APP_CONFIG['schedule']['end'],0) %>
    </tbody>
  </table>
  </div>
</div>