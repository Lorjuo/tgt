<%# Uploader only works when department has been initialized %>
<%#= render :partial => 'shared/tinymce', :locals => { :path => "/departments/#{@department.id}" } unless @department.new_record? %>
<% path = "/departments/#{@department.id}" %>
<script>
  function elFinderBrowser (field_name, url, type, win) {
    var elfinder_url = '/elfinder/frontend?path='+encodeURIComponent("<%= path %>");    // use an absolute path!
    tinymce.activeEditor.windowManager.open({
      file: elfinder_url,
      title: 'Filemanager',
      width: 900,  
      height: 480,
      resizable: 'yes'
    }, {
      setUrl: function (url) {
        win.document.getElementById(field_name).value = url;
      }
    });
    return false;
  }
  // function elFinderBrowser (field_name, url, type, win) {
  //   var elfinder_url = '/elfinder/frontend?path='+encodeURIComponent("<%= path %>");    // use an absolute path!
  //   tinyMCE.activeEditor.windowManager.open({
  //     file: elfinder_url,
  //     title: 'Filemanager',
  //     width: 900,  
  //     height: 480,
  //     resizable: 'yes',
  //     inline: 'yes',    // This parameter only has an effect if you use the inlinepopups plugin!
  //     popup_css: false, // Disable TinyMCE's default popup CSS
  //     close_previous: 'no'
  //   }, {
  //     window: win,
  //     input: field_name
  //   });
  //   return false;
  // }
  tinyMCE.init(
    {
      "selector":"textarea.tinymce",
      "plugins":"image,link",
      image_advtab: true,
      "file_browser_callback":elFinderBrowser,
      init: function(editor) {
        editor.on('init',function(e) {
          //setModalEvents(editor);
          alert('test')
        });
    },
    }
  );
</script>
<%#= tinymce %>
<%= simple_form_for(@department, :defaults => { :input_html => { :class => 'input-xlarge' } }) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <%= f.input :name %>
    <%#= f.association :training_groups,
      :as => :select,
      :collection => TrainingGroup.order('name' => :asc),
      :label_method => :name,
      :value_method => :id,
      :include_blank => false,
      :input_html => { :class => "chosen input-xxlarge"} %>
    <%= f.input :color, :input_html => { :class => "colorpicker", :data => {:"color-format" => "rgba"}} %>
    <%= f.input :description, as: :text, input_html: { class: 'tinymce' } unless @department.new_record?  %>
  </div>

  <div class="form-actions">
    <%= f.button :submit, :class => "btn btn-primary" %>
  </div>
<% end %>
